DROP TABLE "PATIENT";
CREATE TABLE "PATIENT"
(
"ID" NUMBER(*,0),
"FIRST_NAME" VARCHAR2(40 BYTE),
"LAST_NAME" VARCHAR2(40 BYTE),
"ADDRESS" VARCHAR2(40 BYTE),
"BIRTH_DATE" DATE,
"PAYMENT_TYPE_ID" NUMBER(*,0),
"DOCTOR_ID"  NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "PAYMENT_TYPE";
CREATE TABLE "PAYMENT_TYPE"
(
"ID" NUMBER(*,0),
"TYPE" VARCHAR2(40 BYTE)
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "DOCTOR";
CREATE TABLE "DOCTOR"
(
"ID" NUMBER(*,0),
"FIRST_NAME" VARCHAR2(40 BYTE),
"LAST_NAME" VARCHAR2(40 BYTE),
"ADDRESS" VARCHAR2(40 BYTE),
"BIRTH_DATE" DATE
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "TOOTH_FORMULA";
CREATE TABLE "TOOTH_FORMULA"
 (
 "ID" NUMBER(*,0),
 "IS_MISSED" NUMBER(1),
 "IS_ARTIFICIAL" NUMBER(1),
 "IS_CROWN" NUMBER(1),
 "IS_MILK" NUMBER(1),
 "TYPE" VARCHAR2(40 BYTE),
 "PATIENT_ID"  NUMBER(*,0)
 ) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "SERVICE";
CREATE TABLE "SERVICE"
(
"ID" NUMBER(*,0),
"TITLE" VARCHAR2(40 BYTE),
"COST" VARCHAR2(40 BYTE)
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "VISIT_SERVICE";
CREATE TABLE "VISIT_SERVICE"
(
"SERVICE_ID" NUMBER(*,0),
"TOOTH_FORMULA_ID" NUMBER(*,0),
"VISIT_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

DROP TABLE "VISIT";
CREATE TABLE "VISIT"
(
"ID" NUMBER(*,0),
"VISIT_DATE" DATE,
"DOCTOR_ID" NUMBER(*,0),
"PATIENT_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM" ;

-----------------------------------------------------------------
-- Sequences -----------------------------------------------------

DROP SEQUENCE "PATIENT_SEQ";
CREATE SEQUENCE  "PATIENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 38 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE "DOCTOR_SEQ";
CREATE SEQUENCE  "DOCTOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE  "VISIT_SEQ";
CREATE SEQUENCE  "VISIT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 24 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE  "VISIT_SERVICE_SEQ";
CREATE SEQUENCE  "VISIT_SERVICE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 24 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE  "TOOTH_FORMULA_SEQ";
CREATE SEQUENCE  "TOOTH_FORMULA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 24 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE  "SERVICE_SEQ";
CREATE SEQUENCE  "SERVICE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 24 CACHE 20 NOORDER  NOCYCLE ;

------------------------------------------------------------------
-- Fullfill tables------------------------------------------------

REM INSERTING into PAYMENT_TYPE
SET DEFINE OFF;
Insert into PAYMENT_TYPE (ID, TYPE) values (1,'CASH');
Insert into PAYMENT_TYPE (ID, TYPE) values (2,'CASHLESS');

REM INSERTING into CURE
SET DEFINE OFF;
Insert into CURE (ID, TYPE) values (1,'EXTRACT');
Insert into CURE (ID, TYPE) values (2,'CLEAN');
Insert into CURE (ID, TYPE) values (2,'CROWN');

REM INSERTING into DOCTOR
SET DEFINE OFF;
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (1,'Alex','Monk', 'Minsk, Belarus, Uralovo', TO_DATE('11-11-1980', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (2,'James','Brot', 'Minsk, 140', TO_DATE('11-08-1970', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (3,'Nancy','Mina', 'Minsk, 4653', TO_DATE('09-01-1978', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (4,'Kate','Gonkov', 'Gomel, Zareckogo', TO_DATE('04-11-1983', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (5,'Oleg','Petrov', 'Vitebsk, Glabnaya, 140', TO_DATE('11-08-1979', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (6,'Andrew','Wozbord', 'Chashniki, 12', TO_DATE('07-10-1967', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (7,'Svetlana','Hoho', 'Minsk, Uralavo', TO_DATE('11-05-1975', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (8,'Jaugen','Kormilec', 'Minsk, Gorodeckaya, 140', TO_DATE('11-08-1970', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (9,'Nick','Vorobev', 'Grodno, 27', TO_DATE('09-01-1978', 'MM-DD-YYYY'));
Insert into DOCTOR (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE) values (10,'Kate','Karmina', 'Moscow', TO_DATE('01-06-1985', 'MM-DD-YYYY'));

REM INSERTING into PATIENT
SET DEFINE OFF;
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (1, 'Ali', 'Laprade', 'Minsk, Uralavo', TO_DATE('11-11-1980', 'MM-DD-YYYY'), 1, 1);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (2,'Ernestina','Boltz', 'Minsk, 140', TO_DATE('11-09-1970', 'MM-DD-YYYY'), 2, 4);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (3,'Wilbert','Uplinger', 'Minsk, 4653', TO_DATE('09-01-1978', 'MM-DD-YYYY'), 2, 5);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (4,'Phillis','Darr', 'Minsk, Uralavo', TO_DATE('11-11-1980', 'MM-DD-YYYY'), 1, 5);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (5,'Candyce','Pilot', 'Minsk, 140', TO_DATE('11-09-1970', 'MM-DD-YYYY'), 2, 6);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (6,'Antione','Ruddick', 'Minsk, 4653', TO_DATE('09-01-1978', 'MM-DD-YYYY'), 2, 7);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (7,'Louise','Adam', 'Minsk, Uralavo', TO_DATE('11-11-1980', 'MM-DD-YYYY'), 1, 2);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (8,'Lamonica','Chesnutt', 'Minsk, 140', TO_DATE('11-09-1970', 'MM-DD-YYYY'), 2, 10);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (9,'Sheree','Delaune', 'Minsk, 4653', TO_DATE('09-01-1978', 'MM-DD-YYYY'), 2, 10);
Insert into PATIENT (ID, FIRST_NAME, LAST_NAME, ADDRESS, BIRTH_DATE, PAYMENT_TYPE_ID, DOCTOR_ID)
    values (10,'Tad','Kramp', 'Minsk, Uralavo', TO_DATE('11-11-1980', 'MM-DD-YYYY'), 1, 10);

REM INSERTING into SERVICE
SET DEFINE OFF;
Insert into SERVICE (ID, TITLE, COST) values (1, 'TOOTH EXTRACTION', 40);
Insert into SERVICE (ID, TITLE, COST) values (2, 'TOOTH CLEAN', 5);
Insert into SERVICE (ID, TITLE, COST) values (3, 'TOOTH CROWN', 80);
Insert into SERVICE (ID, TITLE, COST) values (4, 'TOOTH ROOT EXTRACTION', 100);
Insert into SERVICE (ID, TITLE, COST) values (5, 'TOOTH DECAY', 80);
Insert into SERVICE (ID, TITLE, COST) values (6, 'CHILD TOOTH EXTRACTION', 30);
Insert into SERVICE (ID, TITLE, COST) values (7, 'TOOTH SEAL', 60);
Insert into SERVICE (ID, TITLE, COST) values (8, 'CHILD TOOTH CROWN', 80);
Insert into SERVICE (ID, TITLE, COST) values (9, 'CHILD WHITENING', 50);
Insert into SERVICE (ID, TITLE, COST) values (10, 'WHITENING', 65);

REM INSERTING into TOOTH_FORMULA
SET DEFINE OFF;
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (1, 1, 0, 0, 0, 'incisors', 1);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (2, 0, 1, 0, 1, 'incisors', 7);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (3, 1, 0, 0, 0, 'canines', 3);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (4, 1, 0, 0, 2, 'premolars', 1);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (5, 0, 1, 0, 10, 'incisors', 4);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (6, 0, 1, 0, 9, 'incisors', 3);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (7, 1, 0, 0, 5, 'premolars', 1);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (8, 0, 1, 0, 5, 'canines', 2);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (9, 0, 0, 0, 4, 'incisors', 3);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (10, 1, 0, 0, 6, 'incisors', 10);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (11, 0, 1, 0, 8, 'incisors', 5);
Insert into TOOTH_FORMULA (ID, IS_MISSED, IS_ARTIFICIAL, IS_CROWN, IS_MILK, TYPE, PATIENT_ID)
    values (12, 0, 0, 0, 10, 'canines', 6);

REM INSERTING into VISIT
SET DEFINE OFF;
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (1, TO_DATE('11-12-2017', 'MM-DD-YYYY'), 2, 1);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (2, TO_DATE('08-11-2017', 'MM-DD-YYYY'), 5, 3);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (3, TO_DATE('09-01-2017', 'MM-DD-YYYY'), 1, 1);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (4, TO_DATE('01-12-2017', 'MM-DD-YYYY'), 4, 1);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (5, TO_DATE('02-11-2017', 'MM-DD-YYYY'), 5, 5);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (6, TO_DATE('03-01-2017', 'MM-DD-YYYY'), 4, 6);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (7, TO_DATE('11-12-2017', 'MM-DD-YYYY'), 8, 9);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (8, TO_DATE('08-11-2017', 'MM-DD-YYYY'), 9, 10);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (9, TO_DATE('04-01-2017', 'MM-DD-YYYY'), 7, 7);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (10, TO_DATE('05-12-2017', 'MM-DD-YYYY'), 1, 8);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (11, TO_DATE('08-11-2017', 'MM-DD-YYYY'), 2, 5);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (12, TO_DATE('06-01-2017', 'MM-DD-YYYY'), 3, 4);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (13, TO_DATE('10-11-2017', 'MM-DD-YYYY'), 4, 2);
Insert into VISIT (ID, VISIT_DATE, DOCTOR_ID, PATIENT_ID) values (14, TO_DATE('11-12-2017', 'MM-DD-YYYY'), 4, 2);

REM INSERTING into VISIT_SERVICE
SET DEFINE OFF;
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (1, 1, 1);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (2, 3, 2);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (3, 4, 3);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (5, 7, 1);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (10, 11, 5);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (6, 12, 6);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (1, 10, 8);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (8, 2, 9);
Insert into VISIT_SERVICE (SERVICE_ID, TOOTH_FORMULA_ID, VISIT_ID) values (3, 5, 12);

--------------------------------------------------------
--  Constraints

ALTER TABLE "PATIENT" DROP CONSTRAINT "PATIENT_PK";
ALTER TABLE "PATIENT" ADD CONSTRAINT "PATIENT_PK" PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM"  ENABLE;

ALTER TABLE "PAYMENT_TYPE" DROP CONSTRAINT "PAYMENT_TYPE_PK";
ALTER TABLE "PAYMENT_TYPE" ADD CONSTRAINT "PAYMENT_TYPE_PK" PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM"  ENABLE;

ALTER TABLE "DOCTOR" DROP CONSTRAINT "DOCTOR_PK";
ALTER TABLE "DOCTOR" ADD CONSTRAINT "DOCTOR_PK" PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM"  ENABLE;

ALTER TABLE "SERVICE" DROP CONSTRAINT "SERVICE_PK";
ALTER TABLE "SERVICE" ADD CONSTRAINT "SERVICE_PK" PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM"  ENABLE;

ALTER TABLE "VISIT" DROP CONSTRAINT "VISIT_PK";
ALTER TABLE "VISIT" ADD CONSTRAINT "VISIT_PK" PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "SYSTEM"  ENABLE;

--------------------------------------------------------
--  Ref Constraints

ALTER TABLE "PATIENT" DROP CONSTRAINT "PAYMENT_TYPE_FK";
ALTER TABLE "PATIENT" ADD CONSTRAINT "PAYMENT_TYPE_FK" FOREIGN KEY ("PAYMENT_TYPE_ID")
  REFERENCES "PAYMENT_TYPE" ("ID") ON DELETE CASCADE ENABLE;
ALTER TABLE "PATIENT" DROP CONSTRAINT "PATIENT_DOCTOR_FK";
ALTER TABLE "PATIENT" ADD CONSTRAINT "PATIENT_DOCTOR_FK" FOREIGN KEY ("DOCTOR_ID")
  REFERENCES "DOCTOR" ("ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "TOOTH_FORMULA" DROP CONSTRAINT "TOOTH_PATIENT_FK";
ALTER TABLE "TOOTH_FORMULA" ADD CONSTRAINT "TOOTH_PATIENT_FK" FOREIGN KEY ("PATIENT_ID")
  REFERENCES "PATIENT" ("ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "VISIT" DROP CONSTRAINT "VISIT_DOCTOR_FK";
ALTER TABLE "VISIT" ADD CONSTRAINT "VISIT_DOCTOR_FK" FOREIGN KEY ("DOCTOR_ID")
  REFERENCES "DOCTOR" ("ID") ON DELETE CASCADE ENABLE;
ALTER TABLE "VISIT" DROP CONSTRAINT "VISIT_PATIENT_FK";
ALTER TABLE "VISIT" ADD CONSTRAINT "VISIT_PATIENT_FK" FOREIGN KEY ("PATIENT_ID")
  REFERENCES "PATIENT" ("ID") ON DELETE CASCADE ENABLE;

ALTER TABLE "VISIT_SERVICE" DROP CONSTRAINT "SERVICE_FK";
ALTER TABLE "VISIT_SERVICE" ADD CONSTRAINT "SERVICE_FK" FOREIGN KEY ("SERVICE_ID")
  REFERENCES "SERVICE" ("ID") ON DELETE CASCADE ENABLE;
ALTER TABLE "VISIT_SERVICE" DROP CONSTRAINT "VISIT_FK";
ALTER TABLE "VISIT_SERVICE" ADD CONSTRAINT "VISIT_FK" FOREIGN KEY ("VISIT_ID")
  REFERENCES "VISIT" ("ID") ON DELETE CASCADE ENABLE;

--------------------------------------------------------
-- Triggers
--------------------------------------------------------

CREATE OR REPLACE TRIGGER "PATIENT_DOCTOR_CHECK"
BEFORE UPDATE OR INSERT ON VISIT
FOR EACH ROW
DECLARE
patient_doctor varchar(40 byte);
BEGIN
  SELECT PATIENT.DOCTOR_ID INTO patient_doctor FROM PATIENT
  WHERE PATIENT.ID = :NEW.PATIENT_ID;

  IF :NEW.DOCTOR_ID != patient_doctor THEN
  RAISE_APPLICATION_ERROR(-20001, 'It is not the doctor of the patient!');
  END IF;
END;
/
ALTER TRIGGER "PATIENT_DOCTOR_CHECK" ENABLE;


CREATE OR REPLACE TRIGGER "PAYMENT_CHECK"
BEFORE UPDATE OR INSERT ON SERVICE
FOR EACH ROW
BEGIN
  IF :NEW.COST < 0 THEN
  RAISE_APPLICATION_ERROR(-20002, 'Service cost should be positive!');
  END IF;
END;
/
ALTER TRIGGER "PAYMENT_CHECK" ENABLE;


CREATE OR REPLACE TRIGGER "DOCTOR_INSERT"
BEFORE UPDATE OR INSERT ON DOCTOR
FOR EACH ROW
BEGIN
  SELECT DOCTOR_SEQ.NEXTVAL
  INTO :new.ID
  FROM dual;
END;
/
ALTER TRIGGER "DOCTOR_INSERT" ENABLE;

CREATE OR REPLACE TRIGGER "SERVICE_INSERT"
BEFORE UPDATE OR INSERT ON SERVICE
FOR EACH ROW
BEGIN
  SELECT SERVICE_SEQ.NEXTVAL
  INTO :new.ID
  FROM dual;
END;
/
ALTER TRIGGER "SERVICE_INSERT" ENABLE;


CREATE OR REPLACE TRIGGER "VISIT_SERVICE_INSERT"
BEFORE INSERT ON VISIT_SERVICE
FOR EACH ROW
DECLARE
service_id varchar(40 byte);
is_tooth_missed number(1);
BEGIN
 SELECT SERVICE.ID INTO service_id
 FROM SERVICE WHERE SERVICE.ID = :new.SERVICE_ID;

 SELECT TOOTH_FORMULA.IS_MISSED INTO is_tooth_missed
 FROM TOOTH_FORMULA WHERE TOOTH_FORMULA.ID = :new.TOOTH_FORMULA_ID;

 IF service_id = 1 AND is_tooth_missed = 1 THEN
    RAISE_APPLICATION_ERROR(-20003, 'Non appropriate service!');
 END IF;

END;
/
ALTER TRIGGER "VISIT_SERVICE_INSERT" ENABLE;

